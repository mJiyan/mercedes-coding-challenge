{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport createRootReducer from \"./reducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport reducers from \"./redux/reducers\"; // Create redux store with history\n\nexport const history = createBrowserHistory();\nexport default function configureStore(preloadedState) {\n  const store = createStore(createRootReducer(history, reducers), // root reducer with router state\n  preloadedState, compose(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  thunkMiddleware, logger // ... other middlewares ...\n  ), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f));\n  return store;\n}","map":{"version":3,"sources":["/Users/mjiyan/Desktop/mercedes-coding-challenge/client/src/configureStore.js"],"names":["applyMiddleware","compose","createStore","thunkMiddleware","logger","createRootReducer","routerMiddleware","createBrowserHistory","reducers","history","configureStore","preloadedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","f"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAGF,oBAAoB,EAApC;AAEP,eAAe,SAASG,cAAT,CAAwBC,cAAxB,EAAwC;AACnD,QAAMC,KAAK,GAAGV,WAAW,CACrBG,iBAAiB,CAACI,OAAD,EAAUD,QAAV,CADI,EACiB;AACtCG,EAAAA,cAFqB,EAGrBV,OAAO,CACHD,eAAe,CACXM,gBAAgB,CAACG,OAAD,CADL,EACgB;AAC3BN,EAAAA,eAFW,EAGXC,MAHW,CAIX;AAJW,GADZ,EAOHS,MAAM,CAACC,4BAAP,GAAsCD,MAAM,CAACC,4BAAP,EAAtC,GAA+EC,CAAD,IAAOA,CAPlF,CAHc,CAAzB;AAcA,SAAOH,KAAP;AACH","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport createRootReducer from \"./reducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport reducers from \"./redux/reducers\";\n\n// Create redux store with history\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n    const store = createStore(\n        createRootReducer(history, reducers), // root reducer with router state\n        preloadedState,\n        compose(\n            applyMiddleware(\n                routerMiddleware(history), // for dispatching history actions\n                thunkMiddleware,\n                logger\n                // ... other middlewares ...\n            ),\n            window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n        )\n    );\n\n    return store;\n}\n"]},"metadata":{},"sourceType":"module"}