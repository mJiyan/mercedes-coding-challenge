{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { socketKeys } from '../../services/constants';\n\nconst useStatus = () => {\n  _s();\n\n  const [updatedStatus, setUpdatedStatus] = useState(null); // Sent and received messages\n\n  const socketRef = useRef();\n  useEffect(() => {\n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(socketKeys.Server); // Listens for incoming messages\n\n    socketRef.current.on(socketKeys.Event, data => {\n      setUpdatedStatus(data);\n    }); // Destroys the socket reference\n    // when the connection is closed\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n  return {\n    updatedStatus\n  };\n};\n\n_s(useStatus, \"rJbTRJ7N8fbc4fHCqR60hbK12lA=\");\n\nexport default useStatus;","map":{"version":3,"sources":["/Users/mjiyan/Desktop/mercedes-coding-challenge/client/src/components/Door/useStatus.js"],"names":["useEffect","useRef","useState","socketIOClient","socketKeys","useStatus","updatedStatus","setUpdatedStatus","socketRef","current","Server","on","Event","data","disconnect"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,IAAD,CAAlD,CADoB,CACsC;;AAC1D,QAAMM,SAAS,GAAGP,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACAQ,IAAAA,SAAS,CAACC,OAAV,GAAoBN,cAAc,CAACC,UAAU,CAACM,MAAZ,CAAlC,CAHY,CAKZ;;AACAF,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqBP,UAAU,CAACQ,KAAhC,EAAwCC,IAAD,IAAU;AAC7CN,MAAAA,gBAAgB,CAACM,IAAD,CAAhB;AACH,KAFD,EANY,CASZ;AACA;;AACA,WAAO,MAAM;AACTL,MAAAA,SAAS,CAACC,OAAV,CAAkBK,UAAlB;AACH,KAFD;AAGH,GAdQ,EAcN,EAdM,CAAT;AAiBA,SAAO;AAAER,IAAAA;AAAF,GAAP;AACH,CAtBD;;GAAMD,S;;AAwBN,eAAeA,SAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { socketKeys } from '../../services/constants';\n\n\nconst useStatus = () => {\n    const [updatedStatus, setUpdatedStatus] = useState(null); // Sent and received messages\n    const socketRef = useRef();\n\n    useEffect(() => {\n\n        // Creates a WebSocket connection\n        socketRef.current = socketIOClient(socketKeys.Server);\n\n        // Listens for incoming messages\n        socketRef.current.on(socketKeys.Event, (data) => {\n            setUpdatedStatus(data);\n        });\n        // Destroys the socket reference\n        // when the connection is closed\n        return () => {\n            socketRef.current.disconnect();\n        };\n    }, []);\n\n\n    return { updatedStatus };\n};\n\nexport default useStatus;\n"]},"metadata":{},"sourceType":"module"}