{"ast":null,"code":"import axios from \"axios\";\nimport { HTTP, endPoint, MaxReviewFileSize, keys } from \"./constants\";\nimport storage from \"./storage\";\nimport { history } from \"../configureStore\";\nimport { store } from \"../index\";\nimport { toast } from \"react-toastify\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\nconst parseJwt = token => {\n  let base64Url = token.split(\".\")[0];\n  let base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  let jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(c => {\n    return `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`;\n  }).join(\"\"));\n  return JSON.parse(jsonPayload);\n};\n\nconst expired = (expiresAt, minutes = 1) => {\n  const timespan = new Date().getTime() / 1000;\n  return expiresAt - minutes * 60 <= timespan;\n};\n\nconst refreshToken = async refresh => {\n  const {\n    data\n  } = await axios({\n    url: `${endPoint}/token/refresh`,\n    data: refresh,\n    method: HTTP.POST\n  });\n  return data;\n};\n\nconst getToken = async () => {\n  const auth = storage.getAuth();\n\n  if (auth.token && auth.refresh) {\n    const jwt = parseJwt(auth.token);\n\n    if (expired(jwt.exp)) {\n      try {\n        const data = await refreshToken({\n          refresh: auth.refresh\n        });\n        storage.setAuth(data);\n        return data.token.value;\n      } catch (error) {\n        storage.removeAuth();\n        return null;\n      }\n    }\n\n    return auth.token;\n  }\n\n  return null;\n};\n\nexport const developmentApiCall = async (url = \"\", data = null, params = null, method = HTTP.GET, headers = {}, withAuth = true) => {\n  let token = null;\n\n  if (withAuth) {\n    token = await getToken();\n  }\n\n  return axios({\n    url: `${endPoint}${url}`,\n    data,\n    params,\n    method,\n    headers: { ...headers,\n      Authorization: `Bearer ${withAuth ? token : \"\"}`\n    },\n    maxContentLength: MaxReviewFileSize\n  }).then(p => {\n    return p;\n  }).catch(err => {\n    if (err.toString() !== \"Error: Network Error\") throw err;else return {\n      data: null\n    };\n  });\n};\naxios.interceptors.response.use(response => {\n  store.dispatch(hideLoading());\n  return response;\n}, error => {\n  if (!error.response) {\n    console.log(\"# NETWORK ERROR # \", error);\n    history.push(\"/error\");\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 401) {\n    store.dispatch({\n      type: \"ACCOUNT/LOGOUT\"\n    });\n\n    if (history.location && history.location.pathname) {\n      storage.setItem(keys.LastLocation, history.location.pathname);\n    }\n\n    history.push(\"/login\", {\n      showLogin: true,\n      authenticated: false\n    });\n  } else if (error.response.status === 422) {\n    const {\n      errors\n    } = error.response.data;\n    const message = Object.keys(errors).reverse().map(key => errors[key]).join(\",\");\n    toast.error(`Please, ${message}`);\n  }\n\n  store.dispatch(hideLoading());\n  return Promise.reject(error.response);\n});\naxios.interceptors.request.use(config => {\n  store.dispatch(showLoading());\n  config.maxContentLength = MaxReviewFileSize;\n  config.maxBodyLength = MaxReviewFileSize;\n  return config;\n}, error => {\n  store.dispatch(hideLoading());\n  return Promise.reject(error);\n});\nexport default {\n  developmentApiCall\n};","map":{"version":3,"sources":["/Users/mjiyan/Desktop/mercedes-coding-challenge/client/src/services/api.js"],"names":["axios","HTTP","endPoint","MaxReviewFileSize","keys","storage","history","store","toast","showLoading","hideLoading","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","expired","expiresAt","minutes","timespan","Date","getTime","refreshToken","refresh","data","url","method","POST","getToken","auth","getAuth","jwt","exp","setAuth","value","error","removeAuth","developmentApiCall","params","GET","headers","withAuth","Authorization","maxContentLength","then","p","catch","err","interceptors","response","use","dispatch","console","log","push","Promise","reject","status","type","location","pathname","setItem","LastLocation","showLogin","authenticated","errors","message","Object","reverse","key","request","config","maxBodyLength"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,iBAAzB,EAA4CC,IAA5C,QAAwD,aAAxD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;;AAIA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,MAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,MAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb;AACA,MAAIC,WAAW,GAAGC,kBAAkB,CAClCC,IAAI,CAACJ,MAAD,CAAJ,CACGD,KADH,CACS,EADT,EAEGM,GAFH,CAEOC,CAAC,IAAI;AACR,WAAQ,IAAI,KAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAA6B,EAAlC,CAAoCC,KAApC,CAA0C,CAAC,CAA3C,CAA8C,EAAzD;AACD,GAJH,EAKGC,IALH,CAKQ,EALR,CADkC,CAApC;AASA,SAAOC,IAAI,CAACC,KAAL,CAAWV,WAAX,CAAP;AACD,CAbD;;AAgBA,MAAMW,OAAO,GAAG,CAACC,SAAD,EAAYC,OAAO,GAAG,CAAtB,KAA4B;AAC1C,QAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAxC;AAEA,SAAOJ,SAAS,GAAGC,OAAO,GAAG,EAAtB,IAA4BC,QAAnC;AACD,CAJD;;AAMA,MAAMG,YAAY,GAAG,MAAMC,OAAN,IAAiB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMpC,KAAK,CAAC;AAC3BqC,IAAAA,GAAG,EAAG,GAAEnC,QAAS,gBADU;AAE3BkC,IAAAA,IAAI,EAAED,OAFqB;AAG3BG,IAAAA,MAAM,EAAErC,IAAI,CAACsC;AAHc,GAAD,CAA5B;AAMA,SAAOH,IAAP;AACD,CARD;;AAYA,MAAMI,QAAQ,GAAG,YAAY;AAC3B,QAAMC,IAAI,GAAGpC,OAAO,CAACqC,OAAR,EAAb;;AACA,MAAID,IAAI,CAAC7B,KAAL,IAAc6B,IAAI,CAACN,OAAvB,EAAgC;AAC9B,UAAMQ,GAAG,GAAGhC,QAAQ,CAAC8B,IAAI,CAAC7B,KAAN,CAApB;;AACA,QAAIgB,OAAO,CAACe,GAAG,CAACC,GAAL,CAAX,EAAsB;AACpB,UAAI;AACF,cAAMR,IAAI,GAAG,MAAMF,YAAY,CAAC;AAAEC,UAAAA,OAAO,EAAEM,IAAI,CAACN;AAAhB,SAAD,CAA/B;AACA9B,QAAAA,OAAO,CAACwC,OAAR,CAAgBT,IAAhB;AACA,eAAOA,IAAI,CAACxB,KAAL,CAAWkC,KAAlB;AACD,OAJD,CAKA,OAAOC,KAAP,EAAc;AACZ1C,QAAAA,OAAO,CAAC2C,UAAR;AACA,eAAO,IAAP;AACD;AACF;;AACD,WAAOP,IAAI,CAAC7B,KAAZ;AACD;;AACD,SAAO,IAAP;AACD,CAlBD;;AAwBA,OAAO,MAAMqC,kBAAkB,GAAG,OAChCZ,GAAG,GAAG,EAD0B,EAEhCD,IAAI,GAAG,IAFyB,EAGhCc,MAAM,GAAG,IAHuB,EAIhCZ,MAAM,GAAGrC,IAAI,CAACkD,GAJkB,EAKhCC,OAAO,GAAG,EALsB,EAMhCC,QAAQ,GAAG,IANqB,KAO7B;AAEH,MAAIzC,KAAK,GAAG,IAAZ;;AAEA,MAAIyC,QAAJ,EAAc;AACZzC,IAAAA,KAAK,GAAG,MAAM4B,QAAQ,EAAtB;AACD;;AAED,SAAOxC,KAAK,CAAC;AACXqC,IAAAA,GAAG,EAAG,GAAEnC,QAAS,GAAEmC,GAAI,EADZ;AAEXD,IAAAA,IAFW;AAGXc,IAAAA,MAHW;AAIXZ,IAAAA,MAJW;AAKXc,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPE,MAAAA,aAAa,EAAG,UAASD,QAAQ,GAAGzC,KAAH,GAAW,EAAG;AAFxC,KALE;AASX2C,IAAAA,gBAAgB,EAAEpD;AATP,GAAD,CAAL,CAUJqD,IAVI,CAUCC,CAAC,IAAI;AACX,WAAOA,CAAP;AACD,GAZM,EAYJC,KAZI,CAYEC,GAAG,IAAI;AACd,QAAIA,GAAG,CAACpC,QAAJ,OAAmB,sBAAvB,EACE,MAAMoC,GAAN,CADF,KAGE,OAAO;AAAEvB,MAAAA,IAAI,EAAE;AAAR,KAAP;AACH,GAjBM,CAAP;AAkBD,CAjCM;AAqCPpC,KAAK,CAAC4D,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACED,QAAQ,IAAI;AACVtD,EAAAA,KAAK,CAACwD,QAAN,CAAerD,WAAW,EAA1B;AACA,SAAOmD,QAAP;AACD,CAJH,EAKEd,KAAK,IAAI;AACP,MAAI,CAACA,KAAK,CAACc,QAAX,EAAqB;AACnBG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkClB,KAAlC;AACAzC,IAAAA,OAAO,CAAC4D,IAAR,CAAa,QAAb;AACA,WAAOC,OAAO,CAACC,MAAR,CAAerB,KAAf,CAAP;AAED;;AACD,MAAIA,KAAK,CAACc,QAAN,CAAeQ,MAAf,KAA0B,GAA9B,EAAmC;AACjC9D,IAAAA,KAAK,CAACwD,QAAN,CAAe;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAf;;AACA,QAAIhE,OAAO,CAACiE,QAAR,IAAoBjE,OAAO,CAACiE,QAAR,CAAiBC,QAAzC,EAAmD;AACjDnE,MAAAA,OAAO,CAACoE,OAAR,CAAgBrE,IAAI,CAACsE,YAArB,EAAmCpE,OAAO,CAACiE,QAAR,CAAiBC,QAApD;AACD;;AACDlE,IAAAA,OAAO,CAAC4D,IAAR,CAAa,QAAb,EAAuB;AAAES,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAvB;AACD,GAND,MAMO,IAAI7B,KAAK,CAACc,QAAN,CAAeQ,MAAf,KAA0B,GAA9B,EAAmC;AACxC,UAAM;AAAEQ,MAAAA;AAAF,QAAa9B,KAAK,CAACc,QAAN,CAAezB,IAAlC;AACA,UAAM0C,OAAO,GAAGC,MAAM,CAAC3E,IAAP,CAAYyE,MAAZ,EACbG,OADa,GAEb5D,GAFa,CAET6D,GAAG,IAAIJ,MAAM,CAACI,GAAD,CAFJ,EAGbxD,IAHa,CAGR,GAHQ,CAAhB;AAIAjB,IAAAA,KAAK,CAACuC,KAAN,CAAa,WAAU+B,OAAQ,EAA/B;AACD;;AACDvE,EAAAA,KAAK,CAACwD,QAAN,CAAerD,WAAW,EAA1B;AACA,SAAOyD,OAAO,CAACC,MAAR,CAAerB,KAAK,CAACc,QAArB,CAAP;AACD,CA5BH;AA+BA7D,KAAK,CAAC4D,YAAN,CAAmBsB,OAAnB,CAA2BpB,GAA3B,CACEqB,MAAM,IAAI;AACR5E,EAAAA,KAAK,CAACwD,QAAN,CAAetD,WAAW,EAA1B;AACA0E,EAAAA,MAAM,CAAC5B,gBAAP,GAA0BpD,iBAA1B;AACAgF,EAAAA,MAAM,CAACC,aAAP,GAAuBjF,iBAAvB;AACA,SAAOgF,MAAP;AACD,CANH,EAOEpC,KAAK,IAAI;AACPxC,EAAAA,KAAK,CAACwD,QAAN,CAAerD,WAAW,EAA1B;AACA,SAAOyD,OAAO,CAACC,MAAR,CAAerB,KAAf,CAAP;AACD,CAVH;AAgBA,eAAe;AAAEE,EAAAA;AAAF,CAAf","sourcesContent":["import axios from \"axios\";\nimport { HTTP, endPoint, MaxReviewFileSize, keys } from \"./constants\";\nimport storage from \"./storage\";\nimport { history } from \"../configureStore\";\nimport { store } from \"../index\";\nimport { toast } from \"react-toastify\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\n\n\nconst parseJwt = token => {\n  let base64Url = token.split(\".\")[0];\n  let base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  let jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map(c => {\n        return `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`;\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n};\n\n\nconst expired = (expiresAt, minutes = 1) => {\n  const timespan = new Date().getTime() / 1000;\n\n  return expiresAt - minutes * 60 <= timespan;\n};\n\nconst refreshToken = async refresh => {\n  const { data } = await axios({\n    url: `${endPoint}/token/refresh`,\n    data: refresh,\n    method: HTTP.POST\n  });\n\n  return data;\n};\n\n\n\nconst getToken = async () => {\n  const auth = storage.getAuth();\n  if (auth.token && auth.refresh) {\n    const jwt = parseJwt(auth.token);\n    if (expired(jwt.exp)) {\n      try {\n        const data = await refreshToken({ refresh: auth.refresh });\n        storage.setAuth(data);\n        return data.token.value;\n      }\n      catch (error) {\n        storage.removeAuth();\n        return null;\n      }\n    }\n    return auth.token;\n  }\n  return null;\n};\n\n\n\n\n\nexport const developmentApiCall = async (\n  url = \"\",\n  data = null,\n  params = null,\n  method = HTTP.GET,\n  headers = {},\n  withAuth = true\n) => {\n\n  let token = null;\n\n  if (withAuth) {\n    token = await getToken();\n  }\n\n  return axios({\n    url: `${endPoint}${url}`,\n    data,\n    params,\n    method,\n    headers: {\n      ...headers,\n      Authorization: `Bearer ${withAuth ? token : \"\"}`\n    },\n    maxContentLength: MaxReviewFileSize\n  }).then(p => {\n    return p\n  }).catch(err => {\n    if (err.toString() !== \"Error: Network Error\")\n      throw err\n    else\n      return { data: null }\n  });\n};\n\n\n\naxios.interceptors.response.use(\n  response => {\n    store.dispatch(hideLoading());\n    return response;\n  },\n  error => {\n    if (!error.response) {\n      console.log(\"# NETWORK ERROR # \", error);\n      history.push(\"/error\");\n      return Promise.reject(error);\n\n    }\n    if (error.response.status === 401) {\n      store.dispatch({ type: \"ACCOUNT/LOGOUT\" });\n      if (history.location && history.location.pathname) {\n        storage.setItem(keys.LastLocation, history.location.pathname);\n      }\n      history.push(\"/login\", { showLogin: true, authenticated: false });\n    } else if (error.response.status === 422) {\n      const { errors } = error.response.data;\n      const message = Object.keys(errors)\n        .reverse()\n        .map(key => errors[key])\n        .join(\",\");\n      toast.error(`Please, ${message}`);\n    }\n    store.dispatch(hideLoading());\n    return Promise.reject(error.response);\n  }\n);\n\naxios.interceptors.request.use(\n  config => {\n    store.dispatch(showLoading());\n    config.maxContentLength = MaxReviewFileSize;\n    config.maxBodyLength = MaxReviewFileSize;\n    return config;\n  },\n  error => {\n    store.dispatch(hideLoading());\n    return Promise.reject(error);\n  }\n);\n\n\n\n\nexport default { developmentApiCall };"]},"metadata":{},"sourceType":"module"}